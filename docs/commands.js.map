{"version":3,"file":"commands.js","mappings":"yBAMA,SAASA,EAAsBC,GAC7B,IACE,IAAMC,EAAS,GAAHC,OAAMC,SAASC,SAAQ,MAAAF,OAAKC,SAASE,MAC3CC,EAAY,GAAHJ,OAAMD,EAAM,gBAE3BM,QAAQC,IAAI,kCAAmCF,GAE/CG,OAAOC,QAAQC,GAAGC,mBAChBN,EACA,CAAEO,OAAQ,GAAIC,MAAO,IACpBC,IACC,GAAIA,EAAYC,SAAWP,OAAOQ,kBAAkBC,OAGlD,OAFAX,QAAQY,MAAM,0BAA2BJ,EAAYI,YACrDnB,EAAMoB,YAIR,IAAMC,EAASN,EAAYO,MAC3Bf,QAAQC,IAAI,8CAKZa,EAAOE,gBAAgBd,OAAOe,UAAUC,sBAAwBC,IAC9DnB,QAAQC,IAAI,mCAAoCkB,KAMlD,IAAMC,EAAYC,aAAaC,QAAQ,wBAA0B,KACjEtB,QAAQC,IAAI,4CAA6CmB,GAMzDG,WAAW,KACT,IACET,EAAOU,aAAaJ,GACpBpB,QAAQC,IAAI,2CACd,CAAE,MAAOwB,GACPzB,QAAQY,MAAM,wCAAyCa,EACzD,GACC,OAGT,CAAE,MAAOA,GACPzB,QAAQY,MAAM,oCAAqCa,EACrD,CAAE,QAEIhC,GAAOA,EAAMoB,WACnB,CACF,CAKAX,OAAOwB,QAAQ,KACZC,OAAenC,sBAAwBA,EACxCQ,QAAQC,IAAI,sD","sources":["webpack://office-addin-taskpane/./src/commands/commands.ts"],"sourcesContent":["/* global Office */\n\n/**\n * Opens the Flowpoint Bulk Archive dialog\n * and syncs user favorites from localStorage to the dialog.\n */\nfunction openBulkArchiveDialog(event: Office.AddinCommands.Event) {\n  try {\n    const origin = `${location.protocol}//${location.host}`;\n    const dialogUrl = `${origin}/dialog.html`;\n\n    console.log(\"🟢 Opening Bulk Archive dialog:\", dialogUrl);\n\n    Office.context.ui.displayDialogAsync(\n      dialogUrl,\n      { height: 55, width: 40 },\n      (asyncResult) => {\n        if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n          console.error(\"❌ Dialog launch failed:\", asyncResult.error);\n          event.completed();\n          return;\n        }\n\n        const dialog = asyncResult.value;\n        console.log(\"✅ Bulk Archive dialog opened successfully.\");\n\n        // ─────────────────────────────────────────────\n        // Listen for messages from dialog\n        // ─────────────────────────────────────────────\n        dialog.addEventHandler(Office.EventType.DialogMessageReceived, (msg) => {\n          console.log(\"📩 Message received from dialog:\", msg);\n        });\n\n        // ─────────────────────────────────────────────\n        // Load favorites from localStorage (Taskpane key)\n        // ─────────────────────────────────────────────\n        const favorites = localStorage.getItem(\"flowpoint:favorites\") || \"[]\";\n        console.log(\"📤 Preparing to send favorites to dialog:\", favorites);\n\n        // ─────────────────────────────────────────────\n        // Ensure dialog is fully initialized before sending data\n        // (Office iframe can take ~1-2 seconds to register its message listener)\n        // ─────────────────────────────────────────────\n        setTimeout(() => {\n          try {\n            dialog.messageChild(favorites);\n            console.log(\"✅ Favorites sent to dialog successfully.\");\n          } catch (err) {\n            console.error(\"❌ Failed to send favorites to dialog:\", err);\n          }\n        }, 2500); // 2.5 s delay for stability\n      }\n    );\n  } catch (err) {\n    console.error(\"❌ Error in openBulkArchiveDialog:\", err);\n  } finally {\n    // Always complete the ribbon command so Outlook UI remains responsive\n    if (event) event.completed();\n  }\n}\n\n// ─────────────────────────────────────────────\n// Register the ribbon command once Office is ready\n// ─────────────────────────────────────────────\nOffice.onReady(() => {\n  (window as any).openBulkArchiveDialog = openBulkArchiveDialog;\n  console.log(\"🧩 Flowpoint ribbon command registered and ready.\");\n});\n\nexport {};\n"],"names":["openBulkArchiveDialog","event","origin","concat","location","protocol","host","dialogUrl","console","log","Office","context","ui","displayDialogAsync","height","width","asyncResult","status","AsyncResultStatus","Failed","error","completed","dialog","value","addEventHandler","EventType","DialogMessageReceived","msg","favorites","localStorage","getItem","setTimeout","messageChild","err","onReady","window"],"sourceRoot":""}